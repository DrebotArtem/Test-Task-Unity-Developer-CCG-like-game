//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AttackListenerComponent attackListener { get { return (AttackListenerComponent)GetComponent(GameComponentsLookup.AttackListener); } }
    public bool hasAttackListener { get { return HasComponent(GameComponentsLookup.AttackListener); } }

    public void AddAttackListener(System.Collections.Generic.List<IAttackListener> newValue) {
        var index = GameComponentsLookup.AttackListener;
        var component = (AttackListenerComponent)CreateComponent(index, typeof(AttackListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAttackListener(System.Collections.Generic.List<IAttackListener> newValue) {
        var index = GameComponentsLookup.AttackListener;
        var component = (AttackListenerComponent)CreateComponent(index, typeof(AttackListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackListener() {
        RemoveComponent(GameComponentsLookup.AttackListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAttackListener;

    public static Entitas.IMatcher<GameEntity> AttackListener {
        get {
            if (_matcherAttackListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AttackListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAttackListener = matcher;
            }

            return _matcherAttackListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAttackListener(IAttackListener value) {
        var listeners = hasAttackListener
            ? attackListener.value
            : new System.Collections.Generic.List<IAttackListener>();
        listeners.Add(value);
        ReplaceAttackListener(listeners);
    }

    public void RemoveAttackListener(IAttackListener value, bool removeComponentWhenEmpty = true) {
        var listeners = attackListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAttackListener();
        } else {
            ReplaceAttackListener(listeners);
        }
    }
}
