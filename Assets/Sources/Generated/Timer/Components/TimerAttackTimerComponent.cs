//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimerEntity {

    public AttackTimerComponent attackTimer { get { return (AttackTimerComponent)GetComponent(TimerComponentsLookup.AttackTimer); } }
    public bool hasAttackTimer { get { return HasComponent(TimerComponentsLookup.AttackTimer); } }

    public void AddAttackTimer(int newAimTarget, float newPeriod) {
        var index = TimerComponentsLookup.AttackTimer;
        var component = (AttackTimerComponent)CreateComponent(index, typeof(AttackTimerComponent));
        component.aimTarget = newAimTarget;
        component.period = newPeriod;
        AddComponent(index, component);
    }

    public void ReplaceAttackTimer(int newAimTarget, float newPeriod) {
        var index = TimerComponentsLookup.AttackTimer;
        var component = (AttackTimerComponent)CreateComponent(index, typeof(AttackTimerComponent));
        component.aimTarget = newAimTarget;
        component.period = newPeriod;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackTimer() {
        RemoveComponent(TimerComponentsLookup.AttackTimer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimerMatcher {

    static Entitas.IMatcher<TimerEntity> _matcherAttackTimer;

    public static Entitas.IMatcher<TimerEntity> AttackTimer {
        get {
            if (_matcherAttackTimer == null) {
                var matcher = (Entitas.Matcher<TimerEntity>)Entitas.Matcher<TimerEntity>.AllOf(TimerComponentsLookup.AttackTimer);
                matcher.componentNames = TimerComponentsLookup.componentNames;
                _matcherAttackTimer = matcher;
            }

            return _matcherAttackTimer;
        }
    }
}
